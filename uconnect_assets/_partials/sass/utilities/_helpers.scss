// ==========================================================================
//   Silent classes and mixins used for cleaning up and consolodating code
// ==========================================================================

//------------------------------------
//    $MEDIA QUERIES
//------------------------------------

//
// Enclose a block of code with a media query as named in `$breakpoints`.
// To create more consolodated code, most (if not all) media queries should be called through
// this mixin.
// Multiple media-queries can be defined by using:
// @include mq((breakpoint, breakpoint)){
//         [Your code here]
// }

@mixin media-query($media-queries){
    $breakpoint-found: false;

    @each $media-query in $media-queries {

        @each $breakpoint in $breakpoints{
            $name: nth($breakpoint, 1);
            $declaration: nth($breakpoint, 2);

            @if $media-query == $name and $declaration{
                $breakpoint-found: true;

                @media only screen and #{$declaration}{
                    @content;
                }
            }
        }
    }

    @if $breakpoint-found == false{
        @warn "Breakpoint ‘#{$media-query}’ does not exist"
    }
}

//Same as above, but shorter
@mixin breakpoint($media-queries){
    @include media-query($media-queries){@content};
}
@mixin bp($media-queries){
    @include media-query($media-queries){@content};
}
@mixin media($media-queries){
    @include media-query($media-queries){@content};
}
@mixin mq($media-queries){
    @include media-query($media-queries){@content};
}


//------------------------------------
//    $MULTIPLE EXTENDS
//------------------------------------
//
// Eclose a list of extends with @include add_style((border-box, extension, extension))
// Note the double paranthesis.
//
@mixin add_styles($items) {
    @each $item in $items {
        @extend %#{$item};
    }
}
//Alias for above
@mixin extends($items) {
    @each $item in $items {
        @extend %#{$item};
    }
}

//------------------------------------
//    $SIMPLE PLACEHOLDERS
//------------------------------------

%border_box{
    box-sizing: border-box;
}
%display_block, .block{
	display: block;
}
%display_inline{
    display: inline;
}
%display_inline_block{
    display: inline-block;
}
%display_inherit {
    display: inherit;
}

%cursor_default, .cursor_default {
    cursor: default;
}
%cursor_pointer, .cursor_pointer {
    cursor: pointer;
}
%cursor_text, .text_pointer {
    cursor: text;
}

%absolute, .absolute {
    position: absolute !important;
}

//
// Clear fix. Add @extend %clearfix or @extend %cf to any element that needs self-clearing.
//
%clearfix, %cf, %clear, .clear{
    *zoom: 1;
    &:before,&:after{
        display: table;
        content: " ";
    }
    &:after{
        clear: both;
        height: 0px;
        width: 0px;
    }
}

//Use an image instead of text, but keep the text in the DOM for
//screen readers.
//Particularly useful for logos. e.g.
// .logo{
//   @include %image-replace;
//   background: url(image/logo.png) no-repeat;
// }
%replace_image{
    white-space: nowrap;
    @extend %o_hide;
    background-color: transparent;
    border: 0;
    *text-indent: -9999px;
}
%replace_image:before {
    content: "";
    @extend %display_block;
    width: 0;
    height: 150%;
}
.nowrap, %nowrap{
	white-space: nowrap;
}
.breakdword{
	word-wrap: break-word;
}
.o_hide{
	@extend %o_hide;
}
.mask, %mask{
	@extend %o_hide;
	mask: url(../img/bg/grad_mask.svg#mask_2);
	-webkit-mask: url(../img/bg/grad_mask.svg#mask) top / cover;
}


// Create vertical rhythms that are more appropriate for headings inside text blocks.
// Adds 2/3 of the vertical rhythm to the top and 1/3 to bottom so headings appear
// closer to their sibling paragraphs. Creates better proximity.
%vertical_rhythm_headings{
    padding: 0;
    margin-bottom: $type_magic_number * .5;
    margin-bottom: ($type_magic_ratio * .5) * 1rem;
    margin-top: $type_magic_number * -.25;
    margin-top: ($type_magic_ratio * -.25) * 1rem;
}

.link_naked, %link_naked{
    // color: inherit;
    text-decoration: none;

    // &:hover, &:focus{
    //     color: inherit;
    //     text-decoration: none;
    // }
}

.center, %center {
    margin: auto;
    position: absolute;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    > * {
        text-align: center;
    }
    // float: none;
    // @extend %display_block;
}
.right, %right {
    @extend %align_right;
}
.left, %left {
    @extend %align_left;
}
.right, %right, .left, %left {
    > * {
        text-align: left;
    }
}

//------------------------------------
//    $RESPONSIVE MIXINS
//------------------------------------
//Mixin to used for mq-scoped extends.
//e.g.: @extend %media_block or @include %small_media_block;

@mixin responsive_helpers($namespace:""){



	%#{$namespace}overflow_hidden, %#{$namespace}o_hide {
		overflow: hidden;
	}

    //Media block.
    // Taken from: http://www.stubbornella.org/content/2010/06/25/the-media-object-saves-hundreds-of-lines-of-code/
    // Used for floating an image of any dimension to the left of a flexible-width object that will not wrap.



    %#{$namespace}media_block{
		zoom: 1;
        & .img, .media, &.media{
            float:left;
            word-break: break-word;
            display: inline-block;
            margin-right: $gutter;
        }
        & .img ~ *, & .media_body{
            overflow: hidden;
        }
    }


	//Hide Visually. Usefuly for Accessiblity.
	//Used for text which describes a purely visual function.
	// e.g. Adding 'Current page' to the current nav item (which is usually indicated by something visual.
	%#{$namespace}hide_visually,
	%#{$namespace}visually_hidden,
	.#{$namespace}visually_hidden {
		border: 0;
		clip: rect(0 0 0 0);
		height: 1px;
		margin: -1px;
		overflow: hidden;
		padding: 0;
		position: absolute;
		width: 1px;
	}
	%#{$namespace}visible{
		clip: auto;
		height: auto;
		margin: 0;
		overflow: visible;
		width: auto;
	}
    //Used for headings+p, or indented paragraphs.
    %#{$namespace}negative_top{
        @include type_space(margin-top, -1)
    }

    //
    // Font family, normal, italic and bold silent classes/extensions.
    // Use these for DRYer CSS output.
    //
    %#{$namespace}type_normal{
        font-weight: 400;
    }
    %#{$namespace}type_italic{
        font-style: italic;
    }
    %#{$namespace}type_bold{
        font-weight: 800;
    }
    %#{$namespace}naked_list{
        @include no_bullets;
    }


    //Alignment
    .#{$namespace}align_left{
        float: left;
        @extend %#{$namespace}space_l;
    }
    .#{$namespace}align_right{
        float: right;
        @extend %#{$namespace}space_l;
    }
    .#{$namespace}align_center{
        float: none;
        margin: 0 auto;
    }
    .#{$namespace}txt_left{
        text-align: left;
    }
    .#{$namespace}txt_right{
        text-align: right;
    }
    .#{$namespace}txt_center{
        text-align: center;
    }
    .#{$namespace}vertical_align_top{
        vertical-align: top;
    }
    .#{$namespace}vertical_align_middle{
        vertical-align: middle;
    }
    .#{$namespace}vertical_align_bottom{
        vertical-align: bottom;
    }
    .#{$namespace}vertical_align_baseline{
        vertical-align: baseline;
    }
    .#{$namespace}float_left{
        float: left;
    }
    .#{$namespace}float_right{
        float: right;
    }
    .#{$namespace}float_none{
        float: none;
    }
    .#{$namespace}pad_t{
        @extend %#{$namespace}pad_t;
        @at-root &_2{
            @extend %#{$namespace}pad_t_2;
        }
        @at-root &_half{
            @extend %#{$namespace}pad_t_half;
        }
        @at-root &_quarter{
            @extend %#{$namespace}pad_t_quarter;
        }
    }
    .#{$namespace}pad_b{
        @extend %#{$namespace}pad_b;
        @at-root &_2{
            @extend %#{$namespace}pad_b_2;
        }
        @at-root &_half{
            @extend %#{$namespace}pad_b_half;
        }
        @at-root &_quarter{
            @extend %#{$namespace}pad_b_quarter;
        }
    }
    .#{$namespace}pad_r{
        @extend %#{$namespace}pad_r;
        @at-root &_2{
            @extend %#{$namespace}pad_r_2;
        }
        @at-root &_half{
            @extend %#{$namespace}pad_r_half;
        }
        @at-root &_quarter{
            @extend %#{$namespace}pad_r_quarter;
        }
    }
    .#{$namespace}pad_l{
        @extend %#{$namespace}pad_l;
        @at-root &_2{
            @extend %#{$namespace}pad_l_2;
        }
        @at-root &_half{
            @extend %#{$namespace}pad_l_half;
        }
        @at-root &_quarter{
            @extend %#{$namespace}pad_l_quarter;
        }
    }
    .#{$namespace}pad_v{
        @extend .#{$namespace}pad_t;
        @extend .#{$namespace}pad_b;
        @at-root &_2{
            @extend .#{$namespace}pad_t_2;
        	@extend .#{$namespace}pad_b_2;
        }
        @at-root &_half{
            @extend .#{$namespace}pad_t_half;
        	@extend .#{$namespace}pad_b_half;
        }
        @at-root &_quarter{
            @extend .#{$namespace}pad_t_quarter;
        	@extend .#{$namespace}pad_b_quarter;
        }
    }
    .#{$namespace}pad_h{
        @extend .#{$namespace}pad_l;
        @extend .#{$namespace}pad_r;
        @at-root &_2{
            @extend .#{$namespace}pad_l_2;
        	@extend .#{$namespace}pad_r_2;
        }
        @at-root &_half{
			@extend .#{$namespace}pad_l_half;
			@extend .#{$namespace}pad_r_half;
        }
        @at-root &_quarter{
            @extend .#{$namespace}pad_l_quarter;
			@extend .#{$namespace}pad_r_quarter;
        }
    }
    .#{$namespace}pad{
        @extend .#{$namespace}pad_h;
        @extend .#{$namespace}pad_v;
        @at-root &_2{
            @extend .#{$namespace}pad_h_2;
        	@extend .#{$namespace}pad_v_2;
        }
        @at-root &_half{
            @extend .#{$namespace}pad_h_half;
        	@extend .#{$namespace}pad_v_half;
        }
        @at-root &_quarter{
            @extend .#{$namespace}pad_h_quarter;
        	@extend .#{$namespace}pad_v_quarter;
        }
    }
    .#{$namespace}pad_n_v{
        padding-top: 0 !important;
        padding-bottom: 0 !important;
    }
    .#{$namespace}pad_n_h{
        padding-right: 0 !important;;
        padding-left: 0 !important;
    }
    .#{$namespace}pad_n_t{
        padding-top: 0 !important;
    }
    .#{$namespace}pad_n_r{
        padding-right: 0 !important;
    }
    .#{$namespace}pad_n_b{
        padding-bottom: 0 !important;
    }
    .#{$namespace}pad_n_l{
        padding-left: 0 !important;
    }
    .#{$namespace}pad_n{
        @extend .#{$namespace}pad_n_v;
        @extend .#{$namespace}pad_n_h;
    }
    .#{$namespace}space_t{
        @extend %#{$namespace}space_t;
        @at-root &_2{
            @extend %#{$namespace}space_t_2;
        }
        @at-root &_half{
            @extend %#{$namespace}space_t_half;
        }
        @at-root &_quarter{
            @extend %#{$namespace}space_t_quarter;
        }
    }
    .#{$namespace}space_r{
        @extend %#{$namespace}space_r;
        @at-root &_2{
            @extend %#{$namespace}space_r_2;
        }
        @at-root &_half{
            @extend %#{$namespace}space_r_half;
        }
        @at-root &_quarter{
            @extend %#{$namespace}space_r_quarter;
        }
    }
    .#{$namespace}space_b{
        @extend %#{$namespace}space_b;
        @at-root &_2{
            @extend %#{$namespace}space_b_2;
        }
        @at-root &_half{
            @extend %#{$namespace}space_b_half;
        }
        @at-root &_quarter{
            @extend %#{$namespace}space_b_quarter;
        }
    }
    .#{$namespace}space_l{
        @extend %#{$namespace}space_l;
        @at-root &_2{
            @extend %#{$namespace}space_l_2;
        }
        @at-root &_half{
            @extend %#{$namespace}space_l_half;
        }
        @at-root &_quarter{
            @extend %#{$namespace}space_l_quarter;
        }
    }
    .#{$namespace}space{
        @extend .#{$namespace}space_t;
        @extend .#{$namespace}space_r;
        @extend .#{$namespace}space_b;
        @extend .#{$namespace}space_l;
        &_2{
            @extend .#{$namespace}space_t_2;
            @extend .#{$namespace}space_r_2;
            @extend .#{$namespace}space_b_2;
            @extend .#{$namespace}space_l_2;
        }
        &_half{
            @extend .#{$namespace}space_t_half;
            @extend .#{$namespace}space_r_half;
            @extend .#{$namespace}space_b_half;
            @extend .#{$namespace}space_l_half;
        }
        &_quarter{
            @extend .#{$namespace}space_t_quarter;
            @extend .#{$namespace}space_r_quarter;
            @extend .#{$namespace}space_b_quarter;
            @extend .#{$namespace}space_l_quarter;
        }
    }
	.#{$namespace}space_n_t{
        margin-top: 0 !important;
    }
    .#{$namespace}space_n_r{
        margin-right: 0 !important;
    }
    .#{$namespace}space_n_b{
        margin-bottom: 0 !important;
    }
    .#{$namespace}space_n_l{
        margin-left: 0 !important;
    }
    .#{$namespace}space_n_h{
        @extend .#{$namespace}space_n_l;
        @extend .#{$namespace}space_n_r;
    }
    .#{$namespace}space_n_v{
        @extend .#{$namespace}space_n_t;
		@extend .#{$namespace}space_n_b;
    }
    .#{$namespace}space_n{
        @extend .#{$namespace}space_n_h;
        @extend .#{$namespace}space_n_v;
    }
    .#{$namespace}space_neg_t{
        @include type_space(margin-top, -1);
        @at-root &_2{
            @include type_space(margin-top, -2);
        }
        @at-root &_half{
            @include type_space(margin-top, -.5);
        }
        @at-root &_quarter{
            @include type_space(margin-top, -.25);
        }
    }
    .#{$namespace}space_neg_b{
        @include type_space(margin-bottom, -1);
        @at-root &_2{
            @include type_space(margin-bottom, -2);
        }
        @at-root &_half{
            @include type_space(margin-bottom, -.5);
        }
        @at-root &_quarter{
            @include type_space(margin-bottom, -.25);
        }
    }
    .#{$namespace}space_neg_r{
        @include rems(margin-right, -$gutter);
        &_2{
            @include rems(margin-right, $gutter*-2);
        }
        &_half{
            @include rems(margin-right, $gutter*-.5);
        }
        &_quarter{
            @include rems(margin-right, $gutter*-.25);
        }
    }
    .#{$namespace}space_neg_l{
        @include rems(margin-left, $gutter*-1);
        &_2{
            @include rems(margin-left, $gutter*-2);
        }
        &_half{
            @include rems(margin-left, $gutter*-.5);
        }
        &_quarter{
            @include rems(margin-left, $gutter*-.25);
        }
    }
    .#{$namespace}space_neg{
        @extend .#{$namespace}space_neg_t;
        @extend .#{$namespace}space_neg_r;
        @extend .#{$namespace}space_neg_b;
        @extend .#{$namespace}space_neg_l;
        @at-root &_2{
            @extend .#{$namespace}space_neg_t_2;
            @extend .#{$namespace}space_neg_r_2;
            @extend .#{$namespace}space_neg_b_2;
            @extend .#{$namespace}space_neg_l_2;
        }
        @at-root &_half{
            @extend .#{$namespace}space_neg_t_half;
            @extend .#{$namespace}space_neg_r_half;
            @extend .#{$namespace}space_neg_b_half;
            @extend .#{$namespace}space_neg_l_half;
        }
        @at-root &_quarter{
            @extend .#{$namespace}space_neg_t_quarter;
            @extend .#{$namespace}space_neg_r_quarter;
            @extend .#{$namespace}space_neg_b_quarter;
            @extend .#{$namespace}space_neg_l_quarter;
        }
    }
    .#{$namespace}space_neg_h{
        @extend .#{$namespace}space_neg_r;
        @extend .#{$namespace}space_neg_l;
        @at-root &_2{
            @extend .#{$namespace}space_neg_r_2;
            @extend .#{$namespace}space_neg_l_2;
        }
        @at-root &_half{
            @extend .#{$namespace}space_neg_r_half;
            @extend .#{$namespace}space_neg_l_half;
        }
        @at-root &_quarter{
            @extend .#{$namespace}space_neg_r_quarter;
            @extend .#{$namespace}space_neg_l_quarter;
        }
    }
    .#{$namespace}space_neg_v{
        @extend .#{$namespace}space_neg_t;
        @extend .#{$namespace}space_neg_b;
        &_2{
            @extend .#{$namespace}space_neg_t_2;
            @extend .#{$namespace}space_neg_b_2;
        }
        &_half{
            @extend .#{$namespace}space_neg_t_half;
            @extend .#{$namespace}space_neg_b_half;
        }
        &_quarter{
            @extend .#{$namespace}space_neg_t_quarter;
            @extend .#{$namespace}space_neg_b_quarter;
        }
    }
}

@mixin responsive_hides($namespace:""){

	%#{$namespace}show     { display: block !important; }
	%#{$namespace}hide     { display: none !important; }
}

//Making the above mixins responsive.

@include responsive_helpers();
@include responsive_hides();

@if $responsive == true{
	@each $name in $breakpoint_has_helpers {
        @include mq($name) {
           @include responsive_helpers('#{$name}_');
        }
    }
    @each $name in $breakpoint_has_widths {
        @include mq($name) {
           @include responsive_hides('#{$name}_');
        }
    }
}


