.box, %box {
    @include type_space(padding, 1);
    @extend %grid_reset;
	@extend %cf;
    @extend %space_b;
    > :last-child{
    	margin-bottom: 0;
    }
}
.box_small, %box_small {
    @include type_space(padding, .5);
}
.box_open, %box_open {
	@extend %pad_n_h;
	border-width: 2px;
	border-style: solid;
    border-top-color: color(form);
    border-bottom-color: color(form);
    border-left-color: transparent;
    border-right-color: transparent;
	margin-top: -2px; // Adjusted baseline for borders.
}
.box_closed, %box_closed{
    border: 2px solid color(form);
	margin-top: -2px; // Adjusted baseline for borders.
}

//Creates a responsive, square container.
//Must have a .body inside for content.
.box_square {
    @extend %o_hide;
    display:block;
    position: relative;
	@extend %breakword;
	@include media-query($smalls){
		@include rems(max-height, ($base_line_height * 5));
	}
	.body{
		@include type_space_sc(padding, .5,.5,0,.5);
		@extend %grid_reset;
		display: block;
        position: absolute;
		@extend %abs_left;
		@extend %abs_top;
		text-align: left;
	}
	&:before{
		margin-top: 100%;
		display:block;
		font-size: 0;
		color: transparent;
		content:" ";
	}
}
//
//Modifiers for box_square
//
// 3:4 box
.pano:before{
	margin-top: 75%;
}
// 1:2 box
.wide:before{
	margin-top: 50%;
}
.box_light, %box_light{
	background-color: #fff;
}
.box_dark, %box_dark{
	background-color: colors(function);
	color: #fff;
	border-color: currentColor;
}
.box_glass, %box_glass{
	@extend %bg_ghost;
	box-shadow: 0 2px 2px -.5px rgba(color(text), .1);
}
%panel_shadow{
    box-shadow: 0px 2px 0px rgba(color(text), .1);
}
.box_panel, %box_panel {
	@extend %box_light;
	border-radius: $tab_border_radius;
	position: relative;
    @extend %panel_shadow;
}
//.box_card {
//	@include type_space(max-height, 10);
//    @include type_space(padding, .5);
//	@include type_space(height, 12);
//    @extend %o_hide;
//	@extend %space_b;
//	display: inline-block;
//	position: relative;
//	width: 100%;
//    a {
//		@extend %color_link;
//        text-decoration: none;
//    }
//    time {
//    	@extend %color_label;
//    }
//	&_head{
//		@include type_space(line-height, 1);
//		@extend %space_b;
//	}
//	&_body{
//		//@include type_font_size(modular-scale(-1));
//		@include type_space(min-height, 9);
//		@include type_space(max-height, 10);
//        @extend %o_hide;
//		margin-top: 0 !important;
//	}
//	&_foot{
//		@include type_space(max-height, 2);
//		@include type-space(min-height, 2);
//		@extend %one_whole;
//		@extend %pad_l_half;
//		@extend %pad_r;
//		border-top: 1px solid $gray_color_lighter;
//		position: absolute !important;
//		margin-top: -1px;
//		bottom: 0;
//		left: 0;
//		box-shadow: 0 -5px 5px 3px rgba(255,255,255,1);
//		vertical-align: middle;
//		background-color: #fff;
//	}
////	@include mq(bigs){
////		@include type_space(height, 12);
////	}
////	@include mq(lap){
////		@include type_space(height, 12);
////	}
//}

.box_flag{
	display: table;
	width: 100%;
    &_fixed{
        table-layout: fixed;
    }
	&_media, &_body{
		margin: 0;
	}

	&_media{
		display: table-cell;
		overflow: hidden;
		position: relative;
		background-color: lighten(color(form), 2%);
		vertical-align: middle;
		text-align: center;

		img, .img{
			@extend %inline_block;
			vertical-align: middle;
		}
        a{
            max-width: 100%;
        }
	}

	&_body{
		@extend %one_whole;
		display: block;
		@extend %pad_b_half;
		@extend %pad_t_quarter;
		@extend %pad_h_half;
		@extend %bigs_pad_h;

		.thin &{
			@extend %bigs_pad_h_half;
		}
	}

    & .center {
        margin: auto;
        position: absolute;
        @extend %abs_all;
        > * {
            text-align: center;
        }
    }
}

.box_promo {
	@include type_space(height, 5);
	background-size: cover !important;
	border-top: 0;
	padding: 0;
	background-color: color(soft_action, dark);
	background-position: center center;
	background-repeat: no-repeat;
	transition: transform 120ms ease-out;
	overflow: hidden;
	&_head{
		@include type-space(line-height, 1);
		@include type_space(padding-right, 1.25);
		@extend %abs_center;
		@extend %desk_two_thirds;
		@extend %one_whole;
		@extend %pad_v_half;
		@extend %wide_one_half;
		@extend %pad_l_half;
		@extend %color_white;
		background: color(link); //fallback for non rgba
		background-color: rgba(color(link), .65);
		transition: width 400ms cubic-bezier(.32, .19, .32, 1.42),
			padding 150ms ease-in, background 300ms ease-in;
		z-index: 2;
		@include mq(bigs){
			padding-right: 2%;
		}
	}
	&_body{
		height: 100%;
		position: relative;
		&:after {
			@include type_space(right, .25);
			@include type_font_size(32px);
			color: color(subtle);
			line-height: 0;
			position: absolute !important;
			top: 50%;
			z-index: 3;
			@include opacity(.6);
		}
		&:hover, &:focus {
			&:after {
				color: white;
				@include opacity(.8);
			}
		}
		&:active {
			&:after {
				@include opacity(1);
				color: color(highlight, dark);
			}
		}
	}
	&:hover &_head{
		width: 100% !important;
		@include type_space(padding-right, 1.25);
		background: color(primary); //fallback for non rgba
		background: rgba(color(primary), .85);
	}
	&:active{
		transform: translateY(2px);
	}
}

@mixin responsive_borders(
	$namespace: "",
	$include-classes: false
) {
	$selector: unquote(", .");
    @if $include-classes == false {
        $selector: unquote("//");
    }
	%#{$namespace}border_t#{$selector}#{$namespace}border_t {
		border-top: $border_width $border_style $border_color;
		margin-top: -($border_width);
		@at-root &_2{
			border-top-width: ($border_width*2);
			border-top-style: $border_style;
			margin-top: -($border_width*2);
		}
		@at-root &_half{
			border-top-width: ($border_width/2);
			border-top-style: $border_style;
			margin-top: -($border_width/2);
		}
	}
	%#{$namespace}border_r#{$selector}#{$namespace}border_r {
		border-right: $border_width $border_style $border_color;
		@at-root &_2{
			border-right-width: ($border_width*2);
		}
		@at-root &_half{
			border-right-width: ($border_width/2);
		}
	}
	%#{$namespace}border_b#{$selector}#{$namespace}border_b {
		border-top: $border_width $border_style $border_color;
		margin-top: -($border_width);
		@at-root &_2{
			border-bottom-width: ($border_width*2);
			margin-top: -($border_width*2);
		}
		@at-root &_half{
			border-bottom-width: ($border_width/2);
			margin-top: -($border_width/2);
		}
	}
	%#{$namespace}border_l#{$selector}#{$namespace}border_l {
		border-left: $border_width $border_style $border_color;
		@at-root &_2{
			border-top-width: ($border_width*2);
		}
		@at-root &_half{
			border-top-width: ($border_width/2);
		}
	}
	%#{$namespace}border_h#{$selector}#{$namespace}border_h {
		@extend %#{$namespace}border_l; @extend %#{$namespace}border_r;
		@at-root &_2{
			@extend %#{$namespace}border_l_2; @extend %#{$namespace}border_r_2;
		}
		@at-root &_half{
			@extend %#{$namespace}border_l_half; @extend %#{$namespace}border_r_half;
		}
	}
	%#{$namespace}border_v#{$selector}#{$namespace}border_v {
		@extend %#{$namespace}border_t; @extend %#{$namespace}border_b;
		@at-root &_2{
			@extend %#{$namespace}border_t_2; @extend %#{$namespace}border_b_2;
		}
		@at-root &_half{
			@extend %#{$namespace}border_t_half; @extend %#{$namespace}border_b_half;
		}
	}
}

@include responsive_borders("", $include_border_classes);

@if $responsive == true{
    @each $name in $breakpoint_has_widths {
        @include media-query($name) {
           @include responsive_borders('#{$name}_', $include_border_classes);
        }
    }
}
